{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popov\\\\vsprojs\\\\react-app\\\\src\\\\pages\\\\AllOrders.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useGetProductsQuery } from \"../store/order/order.api\";\nimport OrderItem from \"../components/OrderItem\";\nimport './AllOrders.css';\nimport isNaN from \"lodash/isNaN\";\nimport { useActions } from \"../hooks/useActions\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport { Pagination } from \"../components/Pagination\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { Categories } from \"../components/Categories\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initstate = [];\nexport function AllOrders() {\n  _s();\n\n  const initialState = [];\n  const [categories, setCategories] = useState(initialState);\n  const {\n    addOrders\n  } = useActions();\n  const {\n    orders\n  } = useTypedSelector(state => state);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const pageNumber = !isNaN(Number(location.search.split(\"=\")[1])) ? Number(location.search.split(\"=\")[1]) : 1;\n  const [pagesCount, setPagesCount] = useState(0);\n  const [currentPage, setCurrentPage] = useState(pageNumber);\n  const {\n    data,\n    isLoading,\n    error\n  } = useGetProductsQuery(currentPage);\n\n  const handlePageChange = _ref => {\n    let {\n      selected\n    } = _ref;\n    setCurrentPage(selected + 1); // history.replace(`?page=${selected + 1}`);\n\n    navigate(`/allOrders/?page=${selected + 1}`);\n  }; // const [isLoading,error]:boolean[]=[false,true]\n\n\n  const categoriesHandler = event => {\n    if (!categories.includes(event.target.name)) setCategories([...categories, event.target.name]);else {\n      setCategories(prev => {\n        return prev.filter(e => e !== `${event.target.name}`);\n      });\n    }\n  };\n\n  const test = () => {\n    console.log(categories);\n  };\n\n  const submitHadnler = () => {};\n\n  useEffect(() => {\n    // const fetchPr = async () => {\n    //     const tempdata: IOrder[] = orderstemp.slice((currentPage - 1) * 3, (currentPage) * 3)\n    //     console.log(tempdata + \" slice\")\n    //     console.log(orderstemp +\"temp\")\n    //     await setOrders(tempdata)\n    // }\n    const pagesQuantity = data && Math.max(Math.ceil((data === null || data === void 0 ? void 0 : data.TotalCountItems) / (data === null || data === void 0 ? void 0 : data.ItemsPerPage)), 1);\n    console.log((data === null || data === void 0 ? void 0 : data.TotalCountItems) + \"total\");\n    console.log((data === null || data === void 0 ? void 0 : data.ItemsPerPage) + \"perpage\");\n    console.log(data === null || data === void 0 ? void 0 : data.orders);\n    console.log(pagesQuantity + \"pagesQuantity\"); // if(categories.length>0) {\n    //     const data:IOrder[]=[{\n    //         id: 1,\n    //         title: \"wtf\",\n    //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\n    //         cost: 1234,\n    //         period: \"asda\",\n    //     },{\n    //         id: 1,\n    //         title: \"wtf\",\n    //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\n    //         cost: 1234,\n    //         period: \"asda\",\n    //     },{\n    //         id: 1,\n    //         title: \"wtf\",\n    //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\n    //         cost: 1234,\n    //         period: \"asda\",\n    //     },{\n    //         id: 1,\n    //         title: \"wtf\",\n    //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\n    //         cost: 1234,\n    //         period: \"asda\",\n    //     },{\n    //         id: 1,\n    //         title: \"wtf\",\n    //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\n    //         cost: 1234,\n    //         period: \"asda\",\n    //     },{\n    //         id: 1,\n    //         title: \"wtf\",\n    //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\n    //         cost: 1234,\n    //         period: \"asda\",\n    //     },{\n    //         id: 1,\n    //         title: \"wtf\",\n    //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\n    //         cost: 1234,\n    //         period: \"asda\",\n    //     },]\n    //     setOrders(data)\n    // }\n    // fetchPr()\n    // const tempdata: IOrder[] = orderstemp.slice((currentPage - 1) * 3, (currentPage) * 3)\n    // console.log(tempdata + \" slice\")\n    // setOrders(tempdata)\n\n    if (data) {\n      addOrders(data.orders);\n    }\n\n    if (pagesQuantity) {\n      setPagesCount(pagesQuantity);\n    }\n\n    console.log(currentPage);\n    console.log(categories + \"categories\");\n  }, [currentPage, categories, data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-container\",\n      children: [\"Left\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          categoriesHandler: categoriesHandler,\n          submitHandler: submitHadnler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"orders-header\",\n        children: \"\\u0412\\u0441\\u0435 \\u0437\\u0430\\u043A\\u0430\\u0437\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), isLoading ? 'Loading...' : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap justify-between\",\n        children: (data === null || data === void 0 ? void 0 : data.orders) && data.orders.map(order => (categories.length == 0 || categories.includes(order.title)) && /*#__PURE__*/_jsxDEV(OrderItem, {\n          order: order\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        initialPage: 1,\n        pagesCount: pagesCount,\n        onChange: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: test,\n        children: \"ASD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllOrders, \"X4+CKFpdXCnIWlxIKtQ+oTh4U8Q=\", false, function () {\n  return [useActions, useTypedSelector, useNavigate, useLocation, useGetProductsQuery];\n});\n\n_c = AllOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllOrders\");","map":{"version":3,"names":["React","useEffect","useState","useGetProductsQuery","OrderItem","isNaN","useActions","useTypedSelector","Pagination","useLocation","useNavigate","Categories","initstate","AllOrders","initialState","categories","setCategories","addOrders","orders","state","navigate","location","pageNumber","Number","search","split","pagesCount","setPagesCount","currentPage","setCurrentPage","data","isLoading","error","handlePageChange","selected","categoriesHandler","event","includes","target","name","prev","filter","e","test","console","log","submitHadnler","pagesQuantity","Math","max","ceil","TotalCountItems","ItemsPerPage","map","order","length","title","id"],"sources":["C:/Users/popov/vsprojs/react-app/src/pages/AllOrders.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useGetProductsQuery, useGetStringQuery } from \"../store/order/order.api\";\r\nimport OrderItem from \"../components/OrderItem\"\r\nimport './AllOrders.css'\r\nimport isNil from \"lodash/isNil\";\r\nimport isNaN from \"lodash/isNaN\";\r\nimport { Link, Outlet } from \"react-router-dom\"\r\nimport { IOrder, orderType } from \"../store/order/order.type\";\r\nimport { useActions } from \"../hooks/useActions\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\nimport { Pagination } from \"../components/Pagination\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Modal } from \"../components/Modal\";\r\nimport { Categories } from \"../components/Categories\";\r\n\r\nconst initstate: IOrder[] = []\r\nexport function AllOrders() { \r\n    const initialState: string[] = []\r\n    const [categories, setCategories] = useState(initialState)\r\n    const { addOrders } = useActions();\r\n    const { orders } = useTypedSelector(state => state);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const pageNumber = !isNaN(Number(location.search.split(\"=\")[1]))\r\n        ? Number(location.search.split(\"=\")[1])\r\n        : 1;\r\n    const [pagesCount, setPagesCount] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(pageNumber);\r\n    const { data, isLoading, error} = useGetProductsQuery(currentPage)\r\n    const handlePageChange = ({ selected }: { selected: number }) => {\r\n        setCurrentPage(selected + 1);\r\n        // history.replace(`?page=${selected + 1}`);\r\n        navigate(`/allOrders/?page=${selected + 1}`)\r\n    };\r\n    // const [isLoading,error]:boolean[]=[false,true]\r\n    const categoriesHandler = (event: any) => {\r\n        if (!categories.includes(event.target.name))\r\n            setCategories([...categories, event.target.name])\r\n        else {\r\n            setCategories((prev) => {\r\n                return prev.filter(e => e !== `${event.target.name}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    const test = () => {\r\n        console.log(categories)\r\n    }\r\n    const submitHadnler = () => {\r\n       \r\n    }\r\n    useEffect(() => {\r\n        // const fetchPr = async () => {\r\n        //     const tempdata: IOrder[] = orderstemp.slice((currentPage - 1) * 3, (currentPage) * 3)\r\n        //     console.log(tempdata + \" slice\")\r\n        //     console.log(orderstemp +\"temp\")\r\n        //     await setOrders(tempdata)\r\n        // }\r\n        const pagesQuantity = data && Math.max(Math.ceil(data?.TotalCountItems / data?.ItemsPerPage), 1)\r\n        console.log(data?.TotalCountItems + \"total\")\r\n        console.log(data?.ItemsPerPage + \"perpage\")\r\n        console.log(data?.orders)\r\n        console.log(pagesQuantity + \"pagesQuantity\")\r\n        // if(categories.length>0) {\r\n        //     const data:IOrder[]=[{\r\n        //         id: 1,\r\n        //         title: \"wtf\",\r\n        //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\r\n        //         cost: 1234,\r\n        //         period: \"asda\",\r\n        //     },{\r\n        //         id: 1,\r\n        //         title: \"wtf\",\r\n        //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\r\n        //         cost: 1234,\r\n        //         period: \"asda\",\r\n        //     },{\r\n        //         id: 1,\r\n        //         title: \"wtf\",\r\n        //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\r\n        //         cost: 1234,\r\n        //         period: \"asda\",\r\n        //     },{\r\n        //         id: 1,\r\n        //         title: \"wtf\",\r\n        //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\r\n        //         cost: 1234,\r\n        //         period: \"asda\",\r\n        //     },{\r\n        //         id: 1,\r\n        //         title: \"wtf\",\r\n        //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\r\n        //         cost: 1234,\r\n        //         period: \"asda\",\r\n        //     },{\r\n        //         id: 1,\r\n        //         title: \"wtf\",\r\n        //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\r\n        //         cost: 1234,\r\n        //         period: \"asda\",\r\n        //     },{\r\n        //         id: 1,\r\n        //         title: \"wtf\",\r\n        //         description: \"adasddasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadasadasdasdassdasdasdasdasdasdasdasdasdasdasdasdadassdasdasdasdasdasdasdasdasdasdasdasdadasda\",\r\n        //         cost: 1234,\r\n        //         period: \"asda\",\r\n        //     },]\r\n        //     setOrders(data)\r\n        // }\r\n\r\n        // fetchPr()\r\n        // const tempdata: IOrder[] = orderstemp.slice((currentPage - 1) * 3, (currentPage) * 3)\r\n        // console.log(tempdata + \" slice\")\r\n\r\n        // setOrders(tempdata)\r\n\r\n        if (data) {\r\n            addOrders(data.orders as IOrder[])\r\n        }\r\n        if (pagesQuantity) {\r\n            setPagesCount(pagesQuantity);\r\n        }\r\n        console.log(currentPage)\r\n        console.log(categories+ \"categories\")\r\n    }, [currentPage, categories,data])\r\nreturn (\r\n    <div className=\"all-container\">\r\n        <div className=\"left-container\">\r\n            Left\r\n            <div className=\"filter-container\">\r\n                {/* <div className=\"filter-header\">\r\n                        Выбрать критерии\r\n                    </div>\r\n                    <ul>\r\n                        <input type=\"checkbox\" onClick={categoriesHandler}></input>\r\n                        <label >Anime</label>\r\n                    </ul> */}\r\n                <Categories categoriesHandler={categoriesHandler} submitHandler={submitHadnler} />\r\n            </div>\r\n        </div>\r\n        {/* <div className='head-container'>\r\n                <h3>Все доступные заказы</h3>\r\n            </div> */}\r\n        <div className=\"orders-container\">\r\n            <h4 className=\"orders-header\">Все заказы</h4>\r\n            {/* <Modal/> */}\r\n            {isLoading ? (\r\n                'Loading...'\r\n            ) : error ? (\r\n                <div>Error</div>\r\n            ) : (\r\n                <div className='flex flex-wrap justify-between'>\r\n                    {data?.orders && data.orders.map(order => (\r\n                        (categories.length == 0 || categories.includes(order.title)) &&\r\n                        <OrderItem key={order.id} order={order} />\r\n                    ))}\r\n                </div>\r\n            )}\r\n            <Pagination\r\n                initialPage={1}\r\n                pagesCount={pagesCount}\r\n                onChange={handlePageChange} />\r\n            <button onClick={test}>ASD</button>\r\n        </div>\r\n\r\n    </div>\r\n)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}