{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const productApi = createApi({\n  reducerPath: \"api/orders\",\n  tagTypes: ['orders'],\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://localhost:7197'\n  }),\n  endpoints: build => ({\n    // getProducts:build.query<IOrderResponse,number>({\n    //     // query:(count:number)=>`Orders/GetAllOrders`\n    //     query:(page:number)=>({\n    //         url:`api/orders?page=${page}`,\n    //         responseHandler:(response)=>response.json()\n    //     })\n    // }),\n    getProducts: build.query({\n      query: arg => {\n        const {\n          page,\n          topics\n        } = arg;\n        console.log('arg: ', arg);\n        return {\n          url: 'api/orders',\n          params: {\n            page,\n            topics\n          }\n        };\n      }\n    }),\n    getString: build.query({\n      query: count => ({\n        url: `Orders/GetAllOrdersstring`,\n        responseHandler: response => response.text()\n      })\n    }),\n    getUserProducts: build.query({\n      query: arg => {\n        const {\n          page,\n          userId\n        } = arg;\n        console.log('arg: ', arg);\n        return {\n          url: 'api/orders/userId',\n          params: {\n            page,\n            userId\n          }\n        };\n      },\n      providesTags: result => result ? [...result.orders.map(_ref => {\n        let {\n          id\n        } = _ref;\n        return {\n          type: 'orders',\n          id\n        };\n      }), {\n        type: 'orders',\n        id: 'LIST'\n      }] : [{\n        type: 'orders',\n        id: 'LIST'\n      }]\n    }),\n    deleteOrder: build.mutation({\n      // query:(count:number)=>`Orders/GetAllOrders`\n      query: orderId => ({\n        url: `api/orders?id=${orderId}`,\n        method: \"DELETE\"\n      })\n    })\n  })\n}); // prepareHeaders(headers, {getState}) {\n//     headers.set('Access-Control-Allow-Origin', '*')\n//     return headers\n// },\n// export const productApi=createApi({\n//     reducerPath:\"api/orders\",\n//     baseQuery:fetchBaseQuery({baseUrl:'http://fakestoreapi.com/'}),\n//     endpoints:build=>({\n//         getProducts:build.query<IOrder[],number>({\n//             query:(count:number)=>`Orders?limit=${count}`,\n//         }),\n//     }),\n// })\n\nexport const {\n  useGetProductsQuery,\n  useGetStringQuery,\n  useGetUserProductsQuery,\n  useDeleteOrderMutation\n} = productApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","productApi","reducerPath","tagTypes","baseQuery","baseUrl","endpoints","build","getProducts","query","arg","page","topics","console","log","url","params","getString","count","responseHandler","response","text","getUserProducts","userId","providesTags","result","orders","map","id","type","deleteOrder","mutation","orderId","method","useGetProductsQuery","useGetStringQuery","useGetUserProductsQuery","useDeleteOrderMutation"],"sources":["C:/Users/popov/vsprojs/react-app/src/store/order/order.api.ts"],"sourcesContent":["import { build } from \"@reduxjs/toolkit/dist/query/core/buildMiddleware/cacheLifecycle\"\r\nimport { BaseQueryFn, createApi, FetchArgs, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"\r\nimport { IOrder, IOrderResponse } from \"./order.type\"\r\n\r\n\r\nexport const productApi = createApi({\r\n  reducerPath: \"api/orders\",\r\n  tagTypes: ['orders'],\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://localhost:7197' }),\r\n  endpoints: build => ({\r\n    // getProducts:build.query<IOrderResponse,number>({\r\n    //     // query:(count:number)=>`Orders/GetAllOrders`\r\n    //     query:(page:number)=>({\r\n    //         url:`api/orders?page=${page}`,\r\n    //         responseHandler:(response)=>response.json()\r\n    //     })\r\n    // }),\r\n    getProducts: build.query<IOrderResponse, { page: number; topics: string[] }>({\r\n      query: (arg) => {\r\n        const { page, topics } = arg;\r\n        console.log('arg: ', arg);\r\n        return {\r\n          url: 'api/orders',\r\n          params: { page, topics },\r\n        };\r\n      },\r\n    }),\r\n    getString: build.query<string, number>({\r\n      query: (count: number) => ({\r\n        url: `Orders/GetAllOrdersstring`,\r\n        responseHandler: (response) => response.text()\r\n      })\r\n    }),\r\n    getUserProducts: build.query<IOrderResponse, { page: number; userId: number }>({\r\n      query: (arg) => {\r\n        const { page, userId } = arg;\r\n        console.log('arg: ', arg);\r\n        return {\r\n          url: 'api/orders/userId',\r\n          params: { page, userId },\r\n        };\r\n      },\r\n      providesTags: (result) =>\r\n        result\r\n          ? [\r\n            ...result.orders.map(({ id }) => ({ type: 'orders' as const, id })),\r\n            { type: 'orders', id: 'LIST' },\r\n          ]\r\n          : [{ type: 'orders', id: 'LIST' }],\r\n    }),\r\n    deleteOrder: build.mutation<void, number>({\r\n      // query:(count:number)=>`Orders/GetAllOrders`\r\n      query: (orderId: number) => ({\r\n        url: `api/orders?id=${orderId}`,\r\n        method: \"DELETE\",\r\n      })\r\n    }),\r\n  }\r\n  ),\r\n})\r\n\r\n\r\n\r\n// prepareHeaders(headers, {getState}) {\r\n//     headers.set('Access-Control-Allow-Origin', '*')\r\n//     return headers\r\n// },\r\n// export const productApi=createApi({\r\n//     reducerPath:\"api/orders\",\r\n//     baseQuery:fetchBaseQuery({baseUrl:'http://fakestoreapi.com/'}),\r\n//     endpoints:build=>({\r\n//         getProducts:build.query<IOrder[],number>({\r\n//             query:(count:number)=>`Orders?limit=${count}`,\r\n//         }),\r\n//     }),\r\n// })\r\n\r\n\r\nexport const { useGetProductsQuery, useGetStringQuery, useGetUserProductsQuery, useDeleteOrderMutation } = productApi"],"mappings":"AACA,SAAsBA,SAAtB,EAA4CC,cAA5C,QAAkE,8BAAlE;AAIA,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAAC;EAClCG,WAAW,EAAE,YADqB;EAElCC,QAAQ,EAAE,CAAC,QAAD,CAFwB;EAGlCC,SAAS,EAAEJ,cAAc,CAAC;IAAEK,OAAO,EAAE;EAAX,CAAD,CAHS;EAIlCC,SAAS,EAAEC,KAAK,KAAK;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,WAAW,EAAED,KAAK,CAACE,KAAN,CAAgE;MAC3EA,KAAK,EAAGC,GAAD,IAAS;QACd,MAAM;UAAEC,IAAF;UAAQC;QAAR,IAAmBF,GAAzB;QACAG,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,GAArB;QACA,OAAO;UACLK,GAAG,EAAE,YADA;UAELC,MAAM,EAAE;YAAEL,IAAF;YAAQC;UAAR;QAFH,CAAP;MAID;IAR0E,CAAhE,CARM;IAkBnBK,SAAS,EAAEV,KAAK,CAACE,KAAN,CAA4B;MACrCA,KAAK,EAAGS,KAAD,KAAoB;QACzBH,GAAG,EAAG,2BADmB;QAEzBI,eAAe,EAAGC,QAAD,IAAcA,QAAQ,CAACC,IAAT;MAFN,CAApB;IAD8B,CAA5B,CAlBQ;IAwBnBC,eAAe,EAAEf,KAAK,CAACE,KAAN,CAA8D;MAC7EA,KAAK,EAAGC,GAAD,IAAS;QACd,MAAM;UAAEC,IAAF;UAAQY;QAAR,IAAmBb,GAAzB;QACAG,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,GAArB;QACA,OAAO;UACLK,GAAG,EAAE,mBADA;UAELC,MAAM,EAAE;YAAEL,IAAF;YAAQY;UAAR;QAFH,CAAP;MAID,CAR4E;MAS7EC,YAAY,EAAGC,MAAD,IACZA,MAAM,GACF,CACA,GAAGA,MAAM,CAACC,MAAP,CAAcC,GAAd,CAAkB;QAAA,IAAC;UAAEC;QAAF,CAAD;QAAA,OAAa;UAAEC,IAAI,EAAE,QAAR;UAA2BD;QAA3B,CAAb;MAAA,CAAlB,CADH,EAEA;QAAEC,IAAI,EAAE,QAAR;QAAkBD,EAAE,EAAE;MAAtB,CAFA,CADE,GAKF,CAAC;QAAEC,IAAI,EAAE,QAAR;QAAkBD,EAAE,EAAE;MAAtB,CAAD;IAfuE,CAA9D,CAxBE;IAyCnBE,WAAW,EAAEvB,KAAK,CAACwB,QAAN,CAA6B;MACxC;MACAtB,KAAK,EAAGuB,OAAD,KAAsB;QAC3BjB,GAAG,EAAG,iBAAgBiB,OAAQ,EADH;QAE3BC,MAAM,EAAE;MAFmB,CAAtB;IAFiC,CAA7B;EAzCM,CAAL;AAJkB,CAAD,CAA5B,C,CA0DP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAM;EAAEC,mBAAF;EAAuBC,iBAAvB;EAA0CC,uBAA1C;EAAmEC;AAAnE,IAA8FpC,UAApG"},"metadata":{},"sourceType":"module"}