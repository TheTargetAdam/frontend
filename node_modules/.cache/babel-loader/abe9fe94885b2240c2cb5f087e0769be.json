{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const productApi = createApi({\n  reducerPath: \"api/orders\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'localhost:5012/'\n  }),\n  endpoints: build => ({\n    getProducts: build.query({\n      query: count => `Orders?limit=${count}`\n    })\n  })\n});\nexport const {\n  useGetProductsQuery\n} = productApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","productApi","reducerPath","baseQuery","baseUrl","endpoints","build","getProducts","query","count","useGetProductsQuery"],"sources":["C:/Users/popov/vsprojs/react-app/src/store/order/order.api.ts"],"sourcesContent":["import { build } from \"@reduxjs/toolkit/dist/query/core/buildMiddleware/cacheLifecycle\"\r\nimport {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/query/react\"\r\nimport { IOrder } from \"./order.type\"\r\n\r\nexport const productApi=createApi({\r\n    reducerPath:\"api/orders\",\r\n    baseQuery:fetchBaseQuery({baseUrl:'localhost:5012/'}),\r\n    endpoints:build=>({\r\n        getProducts:build.query<IOrder[],number>({\r\n            query:(count:number)=>`Orders?limit=${count}`,\r\n        }),\r\n    }),\r\n})\r\n\r\nexport const {useGetProductsQuery}=productApi"],"mappings":"AACA,SAAQA,SAAR,EAAmBC,cAAnB,QAAwC,8BAAxC;AAGA,OAAO,MAAMC,UAAU,GAACF,SAAS,CAAC;EAC9BG,WAAW,EAAC,YADkB;EAE9BC,SAAS,EAACH,cAAc,CAAC;IAACI,OAAO,EAAC;EAAT,CAAD,CAFM;EAG9BC,SAAS,EAACC,KAAK,KAAG;IACdC,WAAW,EAACD,KAAK,CAACE,KAAN,CAA6B;MACrCA,KAAK,EAAEC,KAAD,IAAiB,gBAAeA,KAAM;IADP,CAA7B;EADE,CAAH;AAHe,CAAD,CAA1B;AAUP,OAAO,MAAM;EAACC;AAAD,IAAsBT,UAA5B"},"metadata":{},"sourceType":"module"}